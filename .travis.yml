---
# syntax check: https://lint.travis-ci.org/

# Based on:
#  - https://www.jeffgeerling.com/blog/testing-ansible-roles-travis-ci-github
#  - http://romanvm.pythonanywhere.com/post/using-docker-travis-continuous-integration-25/
#  - https://www.jeffgeerling.com/blog/2016/how-i-test-ansible-configuration-on-7-different-oses-docker
#  - https://www.jeffgeerling.com/blog/2017/fix-ansible-hanging-when-used-docker-and-tty
#  - https://bertvv.github.io/notes-to-self/2015/12/13/testing-ansible-roles-with-travis-ci-part-2-multi-platform-tests/

language: python
cache: pip
python: "2.7"
git:
  depth: 3

sudo: required
# https://docs.travis-ci.com/user/multi-os/
os:
 - linux
 - osx

env:
  # Stable
  #- os=ubuntu version=latest container_id=$(mktemp)
  #- os=debian version=latest container_id=$(mktemp)
   Testing
  - os=ubuntu version=testing container_id=$(mktemp)
  - os=debian version=testing container_id=$(mktemp)
  # Ubuntu: https://hub.docker.com/_/ubuntu/ - https://launchpad.net/ubuntu
  # Debian: https://hub.docker.com/_/debian/ - https://www.debian.org/releases/

matrix:
  fast_finish: true
  allow_failures:
    - env: os=debian
    - env: version=testing

before_install:
  - docker pull ${os}:${version}
  - docker run -d --name "$(cat ${container_id})" -v $(pwd):/travis ${os}:${version} tail -f /dev/null > "${container_id}"

install:
  - > # prepare ansible
    docker exec "$(cat ${container_id})" bash -c 'apt-get update -qq &&
      apt-get install -qqy python-pip &&
      pip install --upgrade pip &&
      pip install ansible'

before_script:
  - export ansible_command='cd /travis && ansible-playbook tomboy.yml'

script:
  - |
    if [ $TRAVIS_OS_NAME == 'osx' ] ; then
      $ansible_command --syntax-check
      $ansible_command
    else
      docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 bash -c "$ansible_command --syntax-check && $ansible_command"
    fi

after_script:
  - docker stop "$(cat ${container_id})"

